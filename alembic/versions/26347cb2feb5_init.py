"""init

Revision ID: 26347cb2feb5
Revises: 
Create Date: 2025-07-03 13:56:26.038847

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from app.models.meals import NonEscapedJSON

# revision identifiers, used by Alembic.
revision: str = '26347cb2feb5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('User',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('meal_admin', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meal_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Restaurant',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('owner', sa.Integer(), nullable=False),
    sa.Column('is_campus', sa.Boolean(), nullable=False),
    sa.Column('establishment_type', sa.Text(), nullable=False),
    sa.Column('building_name', sa.Text(), nullable=True),
    sa.Column('naver_map_link', sa.Text(), nullable=True),
    sa.Column('kakao_map_link', sa.Text(), nullable=True),
    sa.Column('latitude', sa.Float(precision=53), nullable=True),
    sa.Column('longitude', sa.Float(precision=53), nullable=True),
    sa.ForeignKeyConstraint(['owner'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('restaurant_name_index', 'Restaurant', ['name'], unique=False)
    op.create_index('restaurant_owner_index', 'Restaurant', ['owner'], unique=False)
    op.create_table('Restaurant_submission',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('status', sa.Text(), nullable=False),
    sa.Column('submitter', sa.Integer(), nullable=False),
    sa.Column('submitted_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('reviewer', sa.Integer(), nullable=True),
    sa.Column('reviewed_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('rejection_message', sa.Text(), nullable=True),
    sa.Column('establishment_type', sa.Text(), nullable=False),
    sa.Column('is_campus', sa.Boolean(), nullable=False),
    sa.Column('building_name', sa.Text(), nullable=True),
    sa.Column('naver_map_link', sa.Text(), nullable=True),
    sa.Column('kakao_map_link', sa.Text(), nullable=True),
    sa.Column('latitude', sa.Float(precision=53), nullable=True),
    sa.Column('longitude', sa.Float(precision=53), nullable=True),
    sa.ForeignKeyConstraint(['submitter'], ['User.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('restaurant_submission_name_index', 'Restaurant_submission', ['name'], unique=False)
    op.create_index('restaurant_submission_status_index', 'Restaurant_submission', ['status'], unique=False)
    op.create_index('restaurant_submission_submitter_index', 'Restaurant_submission', ['submitter'], unique=False)
    op.create_table('RestaurantManager',
    sa.Column('restaurant_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['Restaurant.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('restaurant_id', 'user_id')
    )
    op.create_table('meal',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('restaurant_id', sa.BigInteger(), nullable=False),
    sa.Column('menu', NonEscapedJSON(), nullable=False),
    sa.Column('registered_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('meal_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['meal_type_id'], ['meal_type.id'], ),
    sa.ForeignKeyConstraint(['restaurant_id'], ['Restaurant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('meal_meal_type_id_index', 'meal', ['meal_type_id'], unique=False)
    op.create_index('meal_restaurant_id_index', 'meal', ['restaurant_id'], unique=False)
    op.create_index('meal_updated_at_index', 'meal', ['updated_at'], unique=False)
    op.create_table('operating_hours',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.Text(), nullable=False),
    sa.Column('start_time', sa.Text(), nullable=False),
    sa.Column('end_time', sa.Text(), nullable=False),
    sa.Column('restaurant_id', sa.Integer(), nullable=True),
    sa.Column('submission_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('(restaurant_id IS NOT NULL AND submission_id IS NULL) OR (restaurant_id IS NULL AND submission_id IS NOT NULL)', name='check_one_foreign_key_not_null'),
    sa.ForeignKeyConstraint(['restaurant_id'], ['Restaurant.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['submission_id'], ['Restaurant_submission.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('operating_hours')
    op.drop_index('meal_updated_at_index', table_name='meal')
    op.drop_index('meal_restaurant_id_index', table_name='meal')
    op.drop_index('meal_meal_type_id_index', table_name='meal')
    op.drop_table('meal')
    op.drop_table('RestaurantManager')
    op.drop_index('restaurant_submission_submitter_index', table_name='Restaurant_submission')
    op.drop_index('restaurant_submission_status_index', table_name='Restaurant_submission')
    op.drop_index('restaurant_submission_name_index', table_name='Restaurant_submission')
    op.drop_table('Restaurant_submission')
    op.drop_index('restaurant_owner_index', table_name='Restaurant')
    op.drop_index('restaurant_name_index', table_name='Restaurant')
    op.drop_table('Restaurant')
    op.drop_table('meal_type')
    op.drop_table('User')
    # ### end Alembic commands ###
